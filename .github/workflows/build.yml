name: CI

on:
  # Compare the preceeding commit of main -> to the current commit of the main branch.
  # (Note: To compare changes between the last pushed commit to the remote main branch set `since_last_remote_commit: true`)
  push:
    branches:
      - main
  # Compare the last commit of main -> to the current commit of a PR branch.
  # (Note: To compare changes between the last pushed commit to the remote PR branch set `since_last_remote_commit: true`)
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # windows-latest | macos-latest
    name: Generate spec files
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main

      - name: Generate specs and commit to spec branch
        run: |
          
          git config user.name github-actions
          git config user.email github-actions@github.com      

          # switch to specs, create if doesn't exist
          git fetch
          git checkout specs 2>/dev/null || git checkout -b specs || exit 1
          # copies built from main to specs (mirror)
          git checkout main .
          
          # ensures jinja2 is accessible
          pip install jinja2-cli[yaml]
                    
          for f in build/*.yml; do
            name=$(basename $f .yml)
            VERSION=$(git log -1 --date=format:'%Y%m%d' --pretty="format:%cd" $f)
            cp build/${name}.xml ./
            jinja2 src/ipset.spec.j2 ${f} -D version=${VERSION} --outfile=firewalld-ipset-${name}.spec
          done
          
          git add *.spec *.xml
          git commit -m "Up"
          # push branches
          git push origin specs
          
          cat firewalld-ipset-braintree.spec